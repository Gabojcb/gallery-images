import * as dependency_0 from '@beyond-js/kernel/bundle';
import * as dependency_1 from '@beyond-js/kernel/styles';
import * as dependency_2 from 'react';
import * as dependency_3 from '@bgroup/ui/image';
import * as dependency_4 from '@bgroup/ui/icons';

const {Bundle: __Bundle} = dependency_0;
const __pkg = new __Bundle({"module":{"vspecifier":"@bgroup/ui@0.0.34/drag-and-drop"},"type":"code","name":"drag-and-drop"}, import.meta.url).package();;

__pkg.dependencies.update([['@beyond-js/kernel/styles', dependency_1],['react', dependency_2],['@bgroup/ui/image', dependency_3],['@bgroup/ui/icons', dependency_4]]);

brequire('@beyond-js/kernel/styles').styles.register('@bgroup/ui@0.0.34/drag-and-drop')


const ims = new Map();

/**********************
INTERNAL MODULE: ./area
**********************/

ims.set('./area', {hash: 3783225284, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Area = Area;
var _react = require("react");
var _image = require("@bgroup/ui/image");
var _context = require("./context");
function Area() {
  const {
    files,
    count,
    formats,
    showMessage,
    state,
    dispatch
  } = (0, _context.useDragAndDropContext)();
  const accept = formats && Array.isArray(formats) && formats.map(item => `.${item}`);
  const cls = count && files.length < count ? "hover FilesDragAndDrop__area" : "FilesDragAndDrop__area";
  const attrs = {};
  if (formats) attrs.accept = accept.join(", ");
  if (count && count > 1) attrs.multiple = true;
  const onFileDrop = event => {
    const newFile = [...event.target.files];
    if (count && count < newFile.length) {
      showMessage(`Solo puese cargar ${count} archivo${count !== 1 ? 's' : ''} a la ves`, 'error', 2000);
      return;
    }
    ;
    if (newFile) {
      dispatch({
        case: "files",
        files: state.files.concat(newFile)
      });
      showMessage(`Archivo${newFile.length > 1 ? "s" : ""} cargado${newFile.length > 1 ? "s" : ""} para importar`, "success", 2000);
    }
  };
  return _react.default.createElement("div", {
    className: cls
  }, _react.default.createElement(_image.BeyondImage, {
    src: `${globalThis.baseDir}assets/cloud-upload-regular-240.png`,
    alt: ""
  }), count && files.length < count && _react.default.createElement("input", {
    ...attrs,
    type: "file",
    onChange: onFileDrop
  }), _react.default.createElement("span", null, "Arrastra y suelta tu archivo"));
}
}});

/*************************
INTERNAL MODULE: ./context
*************************/

ims.set('./context', {hash: 2273647033, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDragAndDropContext = exports.DragAndDropContext = void 0;
var _react = require("react");
const DragAndDropContext = (0, _react.createContext)({
  files: []
});
exports.DragAndDropContext = DragAndDropContext;
const useDragAndDropContext = () => (0, _react.useContext)(DragAndDropContext);
exports.useDragAndDropContext = useDragAndDropContext;
}});

/******************************
INTERNAL MODULE: ./image-config
******************************/

ims.set('./image-config', {hash: 2695271879, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ImageConfig = void 0;
const ImageConfig = {
  default: `${globalThis.baseDir}assets/file-blank-solid-240.png`,
  pdf: `${globalThis.baseDir}assets/file-css-solid-240.png`,
  png: `${globalThis.baseDir}assets/file-pdf-solid-240.png`,
  css: `${globalThis.baseDir}assets/file-png-solid-240.png`
};
exports.ImageConfig = ImageConfig;
}});

/*************************
INTERNAL MODULE: ./imports
*************************/

ims.set('./imports', {hash: 1964123607, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Imports = Imports;
var _react = require("react");
var _area = require("./area");
var _context = require("./context");
var _message = require("./message");
var _preview = require("./preview");
function Imports({
  children
}) {
  const {
    state,
    count,
    drop,
    drag,
    formats
  } = (0, _context.useDragAndDropContext)();
  const textFormats = formats && Array.isArray(formats) && `Formato${formats.length > 1 ? "s" : ""} disponibles: ${formats.join(", ")}`;
  const textAlertInfo = `${count && `Puede cargar un máximo de ${count} archivo${count !== 1 ? "s" : ""}`} <br /> ${textFormats}`;
  const disabled = {};
  if (state.dragging || !state.files.length) disabled.disabled = true;
  return _react.default.createElement("div", {
    className: "drag-and-drop-container"
  }, count !== Infinity && _react.default.createElement("div", {
    className: "info-drag",
    dangerouslySetInnerHTML: {
      __html: textAlertInfo
    }
  }), _react.default.createElement("div", {
    ref: drop,
    "data-type": "import",
    className: "FilesDragAndDrop"
  }, _react.default.createElement(_message.Message, null), state.dragging && _react.default.createElement("div", {
    ref: drag,
    className: "FilesDragAndDrop__placeholder"
  }, " "), _react.default.createElement(_area.Area, null)), _react.default.createElement(_preview.Preview, null), children);
}
}});

/***********************
INTERNAL MODULE: ./index
***********************/

ims.set('./index', {hash: 3102003195, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DragAndDrop = void 0;
var _react = require("react");
var _context = require("./context");
var _reducer = require("./reducer");
var _view = require("./view");
/*bundle*/const DragAndDrop = props => {
  const drop = (0, _react.useRef)(null);
  const [state, dispatch] = (0, _react.useReducer)(_reducer.reducer, _reducer.initialState);
  const {
    onUpload,
    count,
    formats,
    children,
    clean,
    userPhoto,
    textUserPhoto
  } = props;
  const drag = (0, _react.useRef)(null);
  const showMessage = (text, type, timeout) => {
    dispatch({
      case: "message",
      show: true,
      text,
      type
    });
    setTimeout(() => dispatch({
      case: "hideMessage"
    }), timeout);
  };
  const handleDragEnter = event => {
    event.preventDefault();
    event.stopPropagation();
    if (event.target !== drag.current) dispatch({
      case: "dragging",
      dragging: true
    });
  };
  const handleDragLeave = event => {
    event.preventDefault();
    event.stopPropagation();
    if (event.target === drag.current) dispatch({
      case: "dragging",
      dragging: false
    });
  };
  const handleDragOver = event => {
    event.preventDefault();
    event.stopPropagation();
  };
  const handleDrop = event => {
    event.preventDefault();
    event.stopPropagation();
    dispatch({
      case: "dragging",
      dragging: false
    });
    const newFiles = [...event.dataTransfer.files];
    const {
      dataset: {
        type
      }
    } = event.currentTarget;
    if (type === "photo" && newFiles.length > 1) {
      return;
    }
    ;
    if (count && count < newFiles.length) {
      showMessage(`Solo puese cargar ${count} archivo${count !== 1 ? 's' : ''} a la ves`, 'error', 2000);
      return;
    }
    ;
    if (formats && newFiles.some(file => !formats.some(format => file.name.toLowerCase().endsWith(format.toLowerCase())))) {
      const filesFormats = newFiles.map(item => item.type.split("/")[1]);
      showMessage(`Los siguientes formatos no están disponibles: ${filesFormats.join(", ")}`, "error", 2000);
      return;
    }
    ;
    if (newFiles && newFiles.length && type !== "photo") {
      showMessage(`Archivo${newFiles.length > 1 ? "s" : ""} cargado${newFiles.length > 1 ? "s" : ""} para importar`, "success", 2000);
      dispatch({
        case: "files",
        files: state.files.concat(newFiles)
      });
      onUpload(newFiles);
    }
    ;
    if (type === "photo") {
      const img = URL.createObjectURL(newFiles[0]);
      dispatch({
        case: "img",
        img
      });
      onUpload(newFiles);
    }
    ;
  };
  (0, _react.useEffect)(() => {
    if (count && state.files.length >= count || !drop.current) return;
    drop.current.addEventListener('dragover', handleDragOver);
    drop.current.addEventListener('drop', handleDrop);
    drop.current.addEventListener('dragenter', handleDragEnter);
    drop.current.addEventListener('dragleave', handleDragLeave);
    return () => {
      if (!drop.current) return;
      drop.current.removeEventListener('dragover', handleDragOver);
      drop.current.removeEventListener('drop', handleDrop);
      drop.current.removeEventListener('dragenter', handleDragEnter);
      drop.current.removeEventListener('dragleave', handleDragLeave);
    };
  }, [state.files]);
  const value = {
    files: state.files,
    message: state.message,
    count,
    formats,
    showMessage,
    dispatch,
    onUpload,
    state,
    clean,
    drop,
    drag,
    userPhoto,
    textUserPhoto
  };
  return _react.default.createElement(_context.DragAndDropContext.Provider, {
    value: value
  }, _react.default.createElement(_view.View, {
    children: children
  }));
};
exports.DragAndDrop = DragAndDrop;
DragAndDrop.defaultProps = {
  clean: false,
  textUserPhoto: "Haga clic o arraste su imagen para cambiar foto"
};
}});

/*************************
INTERNAL MODULE: ./message
*************************/

ims.set('./message', {hash: 3628827464, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Message = Message;
var _react = require("react");
var _context = require("./context");
function Message() {
  const {
    message
  } = (0, _context.useDragAndDropContext)();
  return _react.default.createElement(_react.default.Fragment, null, "  ", message.show && _react.default.createElement("div", {
    className: `FilesDragAndDrop__placeholder FilesDragAndDrop__placeholder--${message.type}`
  }, message.text, _react.default.createElement("span", {
    role: 'img',
    "aria-label": 'emoji',
    className: 'area__icon'
  }, message.type === 'error' ? _react.default.createElement(_react.default.Fragment, null) : _react.default.createElement(_react.default.Fragment, null, "\uD83D\uDC4F"))));
}
}});

/*************************
INTERNAL MODULE: ./preview
*************************/

ims.set('./preview', {hash: 2117760862, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Preview = Preview;
var _react = require("react");
var _context = require("./context");
var _imageConfig = require("./image-config");
function Preview() {
  const {
    files,
    dispatch
  } = (0, _context.useDragAndDropContext)();
  const deleteFile = event => {
    const {
      dataset
    } = event.currentTarget;
    const fileFilter = files.filter(file => file.name !== dataset.name);
    dispatch({
      case: "files",
      files: [...fileFilter]
    });
  };
  const preview = files.map((item, index) => _react.default.createElement("div", {
    key: index,
    className: "drop-file-preview__item"
  }, _react.default.createElement("img", {
    src: _imageConfig.ImageConfig["default"],
    alt: ""
  }), _react.default.createElement("div", {
    className: "drop-file-preview__item__info"
  }, _react.default.createElement("p", null, item.name), _react.default.createElement("p", null, item.size, "B")), _react.default.createElement("span", {
    "data-name": item.name,
    onClick: deleteFile,
    className: "drop-file-preview__item__del"
  }, "x")));
  return _react.default.createElement(_react.default.Fragment, null, " ", !!files.length && _react.default.createElement("div", {
    className: "drop-file-preview"
  }, _react.default.createElement("p", {
    className: "drop-file-preview__title"
  }, "Listo para Importar"), preview));
}
}});

/*************************
INTERNAL MODULE: ./reducer
*************************/

ims.set('./reducer', {hash: 3335817071, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reducer = exports.initialState = void 0;
const reducer = (state, payload) => {
  switch (payload.case) {
    case "dragging":
      {
        return {
          ...state,
          dragging: payload.dragging
        };
      }
      ;
    case "files":
      {
        return {
          ...state,
          files: payload.files
        };
      }
      ;
    case "message":
      {
        return {
          ...state,
          message: {
            show: payload.show,
            text: payload.text,
            type: payload.type
          }
        };
      }
      ;
    case "hideMessage":
      {
        return {
          ...state,
          message: {
            show: false,
            text: null,
            type: null
          }
        };
      }
      ;
    case "img":
      {
        return {
          ...state,
          img: payload.img
        };
      }
      ;
    default:
      return;
  }
  ;
};
exports.reducer = reducer;
const initialState = {
  dragging: false,
  files: [],
  message: {
    show: false,
    text: null,
    type: null
  },
  img: ""
};
exports.initialState = initialState;
}});

/***********************
INTERNAL MODULE: ./types
***********************/

ims.set('./types', {hash: 1227271531, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
;
;
}});

/****************************
INTERNAL MODULE: ./user-photo
****************************/

ims.set('./user-photo', {hash: 3162476751, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UserPhoto = UserPhoto;
var _react = require("react");
var _context = require("./context");
var _icons = require("@bgroup/ui/icons");
var _image = require("@bgroup/ui/image");
function UserPhoto() {
  const {
    drop,
    textUserPhoto,
    state,
    dispatch
  } = (0, _context.useDragAndDropContext)();
  const onImageChange = event => {
    const [file] = event.target.files;
    if (!file) return;
    const img = URL.createObjectURL(file);
    dispatch({
      case: "img",
      img
    });
  };
  const cls = state.img ? "drag-and-drop-container-user" : "drag-and-drop-container-user border";
  return _react.default.createElement("div", {
    className: cls
  }, _react.default.createElement("div", {
    ref: drop,
    "data-type": "photo",
    className: "file-drag-and-drop-user"
  }, _react.default.createElement(_icons.BeyondIcon, {
    icon: "camera"
  }), _react.default.createElement("span", null, textUserPhoto), _react.default.createElement("input", {
    placeholder: "Select image",
    accept: "image/*",
    multiple: false,
    type: "file",
    onChange: onImageChange
  })), state.img && _react.default.createElement(_image.BeyondImage, {
    alt: "photo user",
    src: state.img
  }));
}
}});

/**********************
INTERNAL MODULE: ./view
**********************/

ims.set('./view', {hash: 3281426199, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.View = View;
var _react = require("react");
var _context = require("./context");
var _imports = require("./imports");
var _userPhoto = require("./user-photo");
function View({
  children
}) {
  const {
    userPhoto
  } = (0, _context.useDragAndDropContext)();
  const Control = userPhoto ? _userPhoto.UserPhoto : _imports.Imports;
  return _react.default.createElement(Control, {
    children: children
  });
}
;
}});

__pkg.exports.descriptor = [{"im":"./index","from":"DragAndDrop","name":"DragAndDrop"}];

export let DragAndDrop;

// Module exports
__pkg.exports.process = function({require, prop, value}) {
    (require || prop === 'DragAndDrop') && (DragAndDrop = require ? require('./index').DragAndDrop : value);

};
export const __beyond_pkg = __pkg;

export const hmr = new (function () {
    this.on = (event, listener) => void 0;
    this.off = (event, listener) => void 0;
});


__pkg.initialise(ims);
//# sourceMappingURL=drag-and-drop.browser.mjs.map
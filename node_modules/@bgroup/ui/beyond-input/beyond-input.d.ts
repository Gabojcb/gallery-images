/************
Processor: ts
************/

import * as dependency_0 from '@beyond-js/react-widgets/page';

// FILE: controller.d.ts
declare namespace ns_controller {
    import PageReactWidgetController = dependency_0.PageReactWidgetController;
    import View = ns_views_index.View;
    class Controller extends PageReactWidgetController {
        get Widget(): typeof View;
    }
}

// FILE: views\implementations.d.ts
declare namespace ns_views_implementations {
    const implementation = "\nexport function Results() {\n\tconst [value, setValue] = React.useState('');\n\n\tfunction handleChange(event) {\n\t\tconst { value: inputValue } = event.target;\n\t\tsetValue(inputValue);\n\t}\n\n\tfunction handleSubmit(event) {\n\t\tevent.preventDefault();\n\t\t// logic...\n\t}\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<BeyondInput type=\"text\" name=\"name\" label=\"Insert a text...\" onChange={handleChange} value={value} />\n\t\t</form>\n\t);\n}";
    const implementationError = "\n<BeyondInput\n\ttype=\"text\"\n\tlabel=\"Insert a text...\"\n\thasError={true}\n\terrorMessage=\"Error in input\"\n/>\n";
    const implementationIcon = "\n<BeyondInput\n\ttype=\"text\"\n\tlabel=\"Insert a text...\"\n\ticon=\"user\"\n/>\n";
    const implementationDisabled = "\n<BeyondInput\n\ttype=\"text\"\n\tlabel=\"Insert a text...\"\n\tdisabled\n/>\n";
    const implementationPassword = "\n<BeyondInput\n\ttype=\"password\"\n\tlabel=\"Insert a text...\"\n\tpassword\n/>\n";
    const implementationLoading = "\n<BeyondInput\n\ttype=\"text\"\n\tlabel=\"Insert a text...\"\n\tloading\n\tcolorSpinner=\"#fff\"\n/>\n";
}

// FILE: views\index.d.tsx
declare namespace ns_views_index {
    /// <reference types="react" />
    function View(): JSX.Element;
}

// FILE: views\result-input-disabled.d.tsx
declare namespace ns_views_resultinputdisabled {
    /// <reference types="react" />
    function ResultInputDisabled(): JSX.Element;
}

// FILE: views\result-input-error.d.tsx
declare namespace ns_views_resultinputerror {
    /// <reference types="react" />
    function ResultInputError(): JSX.Element;
}

// FILE: views\result-input-loading.d.tsx
declare namespace ns_views_resultinputloading {
    /// <reference types="react" />
    function ResultInputLoading(): JSX.Element;
}

// FILE: views\result-input-password.d.tsx
declare namespace ns_views_resultinputpassword {
    /// <reference types="react" />
    function ResultInputPassword(): JSX.Element;
}

// FILE: views\result-input-with-icon.d.tsx
declare namespace ns_views_resultinputwithicon {
    /// <reference types="react" />
    function ResultInputWithIcon(): JSX.Element;
}

// FILE: views\results.d.tsx
declare namespace ns_views_results {
    /// <reference types="react" />
    function Results(): JSX.Element;
}

export import Controller = ns_controller.Controller;
export import View = ns_views_index.View;


export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };
define(["exports", "module", "@beyond-js/kernel/bundle", "@beyond-js/kernel/styles", "react", "@beyond-js/kernel/routing"], function (_exports, _amd_module, dependency_0, dependency_1, dependency_2, dependency_3) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.useTabsContext = _exports.hmr = _exports.__beyond_pkg = _exports.TabsContextProvider = _exports.TabsContent = _exports.Tabs = _exports.BeyondTabs = _exports.BeyondTab = void 0;
  const {
    Bundle: __Bundle
  } = dependency_0;
  const __pkg = new __Bundle({
    "module": {
      "vspecifier": "@bgroup/ui@0.0.34/tabs"
    },
    "type": "code",
    "name": "tabs"
  }, _amd_module.uri).package();
  ;
  __pkg.dependencies.update([['@beyond-js/kernel/styles', dependency_1], ['react', dependency_2], ['@beyond-js/kernel/routing', dependency_3]]);
  brequire('@beyond-js/kernel/styles').styles.register('@bgroup/ui@0.0.34/tabs');
  const ims = new Map();

  /*****************************
  INTERNAL MODULE: ./beyond-tabs
  *****************************/

  ims.set('./beyond-tabs', {
    hash: 3249066163,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.BeyondTabs = BeyondTabs;
      var React = require("react");
      var _context = require("./context");
      /*bundle*/
      function BeyondTabs(props) {
        return React.createElement(_context.TabsContextProvider, {
          ...props
        }, props.children);
      }
    }
  });

  /*************************
  INTERNAL MODULE: ./context
  *************************/

  ims.set('./context', {
    hash: 1648631947,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.TabsContextProvider = TabsContextProvider;
      exports.useTabsContext = void 0;
      var React = require("react");
      const TabsContext = (0, React.createContext)({});
      /*bundle*/
      function TabsContextProvider(props) {
        const {
          children,
          orientation,
          className,
          selected
        } = props;
        const [active, setSelected] = (0, React.useState)(selected);
        (0, React.useEffect)(() => {
          setSelected(selected);
        }, [selected]);
        const tabNavigate = index => setSelected(index);
        const data = {
          'children': children,
          'orientation': orientation,
          'tabNavigate': tabNavigate,
          'selected': active,
          'index': selected !== active ? selected : active
        };
        const orientationTab = orientation ? orientation : 'horizontal';
        let cls = 'beyond-tabs beyond-tabs-container ';
        cls += `${orientationTab === 'horizontal' ? 'beyond-tabs-horizontal' : 'beyond-tabs-vertical'}`;
        if (className) cls += ` ${className}`;
        return React.createElement(TabsContext.Provider, {
          value: data
        }, React.createElement("div", {
          className: cls
        }, children));
      }
      /*bundle*/
      const useTabsContext = () => (0, React.useContext)(TabsContext);
      exports.useTabsContext = useTabsContext;
    }
  });

  /*********************
  INTERNAL MODULE: ./tab
  *********************/

  ims.set('./tab', {
    hash: 3372983495,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.BeyondTab = void 0;
      var React = require("react");
      /*bundle*/
      const BeyondTab = props => {
        const {
          index,
          isActive,
          selected,
          className,
          children
        } = props;
        let cls = isActive && parseInt(index) === parseInt(selected) ? "beyond-tab tab-active" : "beyond-tab";
        if (className) cls += ` ${className}`;
        const attrs = {
          ...props
        };
        delete attrs.children;
        delete attrs.onTab;
        delete attrs.isActive;
        delete attrs.nolink;
        delete attrs.className;
        return React.createElement("div", {
          className: cls,
          ...attrs
        }, children);
      };
      exports.BeyondTab = BeyondTab;
    }
  });

  /******************************
  INTERNAL MODULE: ./tabs-content
  ******************************/

  ims.set('./tabs-content', {
    hash: 3319265128,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.TabsContent = TabsContent;
      var React = require("react");
      var _context = require("./context");
      /*bundle*/
      function TabsContent(props) {
        const context = (0, _context.useTabsContext)();
        const {
          children
        } = props;
        const content = children.find((content, index) => index === context.index);
        return React.createElement("div", {
          className: "beyond-tabs-content"
        }, content);
      }
      ;
    }
  });

  /**********************
  INTERNAL MODULE: ./tabs
  **********************/

  ims.set('./tabs', {
    hash: 2023887105,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.Tabs = Tabs;
      var React = require("react");
      var _context = require("./context");
      var _tab = require("./tab");
      var _routing = require("@beyond-js/kernel/routing");
      /*bundle*/
      function Tabs(props) {
        const [state, setState] = (0, React.useState)({
          active: true,
          valueSelected: 0
        });
        const {
          tabNavigate: tabNavigateGo,
          selected
        } = (0, _context.useTabsContext)();
        const tabNavigate = (event, callback) => {
          const target = event.currentTarget;
          const index = parseInt(target.dataset.index);
          const path = target.dataset.path;
          setState({
            'valueSelected': index,
            'active': index !== state.valueSelected ? true : !state.active
          });
          if (callback) callback(event);
          tabNavigateGo(index);
          if (path) _routing.routing.replaceState({}, 'nada', path);
        };
        const {
          children,
          nolink
        } = props;
        const {
          active,
          valueSelected
        } = state;
        const output = children.map((tab, index) => {
          const properties = {
            'key': index,
            'selected': selected,
            'isActive': active,
            'index': index,
            'data-index': index,
            'data-path': tab.props['data-path']
          };
          if (!nolink) properties.onClick = tabNavigate;else properties.nolink = true;
          if (tab.props.onClick) properties.onClick = event => tabNavigate(event, tab.props.onClick);
          if (tab.type === _tab.BeyondTab) return React.cloneElement(tab, properties);
          return React.createElement(_tab.BeyondTab, {
            ...properties,
            key: index
          }, tab);
        });
        return React.createElement("div", {
          className: 'beyond-tabs-items'
        }, React.createElement("div", {
          className: "tabs-container"
        }, output));
      }
    }
  });
  __pkg.exports.descriptor = [{
    "im": "./beyond-tabs",
    "from": "BeyondTabs",
    "name": "BeyondTabs"
  }, {
    "im": "./context",
    "from": "TabsContextProvider",
    "name": "TabsContextProvider"
  }, {
    "im": "./context",
    "from": "useTabsContext",
    "name": "useTabsContext"
  }, {
    "im": "./tab",
    "from": "BeyondTab",
    "name": "BeyondTab"
  }, {
    "im": "./tabs-content",
    "from": "TabsContent",
    "name": "TabsContent"
  }, {
    "im": "./tabs",
    "from": "Tabs",
    "name": "Tabs"
  }];
  let BeyondTabs, TabsContextProvider, useTabsContext, BeyondTab, TabsContent, Tabs;

  // Module exports
  _exports.Tabs = Tabs;
  _exports.TabsContent = TabsContent;
  _exports.BeyondTab = BeyondTab;
  _exports.useTabsContext = useTabsContext;
  _exports.TabsContextProvider = TabsContextProvider;
  _exports.BeyondTabs = BeyondTabs;
  __pkg.exports.process = function ({
    require,
    prop,
    value
  }) {
    (require || prop === 'BeyondTabs') && (_exports.BeyondTabs = BeyondTabs = require ? require('./beyond-tabs').BeyondTabs : value);
    (require || prop === 'TabsContextProvider') && (_exports.TabsContextProvider = TabsContextProvider = require ? require('./context').TabsContextProvider : value);
    (require || prop === 'useTabsContext') && (_exports.useTabsContext = useTabsContext = require ? require('./context').useTabsContext : value);
    (require || prop === 'BeyondTab') && (_exports.BeyondTab = BeyondTab = require ? require('./tab').BeyondTab : value);
    (require || prop === 'TabsContent') && (_exports.TabsContent = TabsContent = require ? require('./tabs-content').TabsContent : value);
    (require || prop === 'Tabs') && (_exports.Tabs = Tabs = require ? require('./tabs').Tabs : value);
  };
  const __beyond_pkg = __pkg;
  _exports.__beyond_pkg = __beyond_pkg;
  const hmr = new function () {
    this.on = (event, listener) => void 0;
    this.off = (event, listener) => void 0;
  }();
  _exports.hmr = hmr;
  __pkg.initialise(ims);
});
//# sourceMappingURL=tabs.amd.js.map
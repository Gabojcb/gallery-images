/************
Processor: ts
************/

import * as dependency_0 from '@beyond-js/react-widgets/base';

// FILE: bg-components.d.ts
declare namespace ns_bgcomponents {
    const components: {
        name: string;
        path: string;
        subComponents: {
            name: string;
            path: string;
        }[];
    }[];
}

// FILE: components\sidebar-dropdown.d.tsx
declare namespace ns_components_sidebardropdown {
    /// <reference types="react" />
    function SidebarDropdown({ component }: {
        component: any;
    }): JSX.Element;
}

// FILE: components\sidebar-item.d.tsx
declare namespace ns_components_sidebaritem {
    /// <reference types="react" />
    interface Props {
        component: {
            path: string;
            name: string;
        };
    }
    function SidebarItem({ component }: Props): JSX.Element;
}

// FILE: components\sidebar.d.tsx
declare namespace ns_components_sidebar {
    /// <reference types="react" />
    function Sidebar(): JSX.Element;
}

// FILE: controller.d.ts
declare namespace ns_controller {
    import ReactWidgetController = dependency_0.ReactWidgetController;
    import Layout = ns_views_index.Layout;
    class Controller extends ReactWidgetController {
        get Widget(): typeof Layout;
    }
}

// FILE: views\index.d.tsx
declare namespace ns_views_index {
    /// <reference types="react" />
    global {
        namespace JSX {
            interface IntrinsicElements {
                "beyond-layout-children": any;
            }
        }
    }
    function Layout(): JSX.Element;
}

export import Controller = ns_controller.Controller;


export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };
/************
Processor: ts
************/

import * as dependency_0 from 'react';
import * as dependency_1 from '@bgroup/ui/reactive-model';

// FILE: context.d.tsx
declare namespace ns_context {
    import React = dependency_0;
    const /*bundle*/ BeyondSwiperContext: React.Context<any>;
    const /*bundle*/ useBeyondSwiperContext: () => any;
}

// FILE: controller.d.ts
declare namespace ns_controller {
    import ReactiveModel = dependency_1.ReactiveModel;
    class Controller extends ReactiveModel {
        #private;
        get swiper(): any;
        setSwiper: (element: any, props: any, ref: any) => void;
        nextSlide: () => void;
        next: () => void;
    }
}

// FILE: slide.d.tsx
declare namespace ns_slide {
    /// <reference types="react" />
    function Slide(props: any): JSX.Element;
}

// FILE: swiper-slider.d.tsx
declare namespace ns_swiperslider {
    import React = dependency_0;
    interface props {
        children: Array<JSX.Element>;
        footer?: boolean;
        navigation?: boolean;
        pagination?: boolean;
        next?: boolean;
        functionNext?: (e: React.SyntheticEvent) => void;
        className?: string;
        slideTo?: any;
        slidesPerView?: string | number;
        spaceBetween?: number;
    }
    function BeyondSwiperSlider(props: props): JSX.Element;
}

export import BeyondSwiperContext = ns_context.BeyondSwiperContext;
export import useBeyondSwiperContext = ns_context.useBeyondSwiperContext;
export import BeyondSwiperSlider = ns_swiperslider.BeyondSwiperSlider;


export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };
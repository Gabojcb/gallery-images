import * as dependency_0 from '@beyond-js/kernel/bundle';
import * as dependency_1 from 'react';
import * as dependency_2 from '@beyond-js/kernel/styles';

const {Bundle: __Bundle} = dependency_0;
const __pkg = new __Bundle({"module":{"vspecifier":"@bgroup/ui@0.0.34/spinner"},"type":"code","name":"spinner"}, import.meta.url).package();;

__pkg.dependencies.update([['react', dependency_1],['@beyond-js/kernel/styles', dependency_2]]);

brequire('@beyond-js/kernel/styles').styles.register('@bgroup/ui@0.0.34/spinner')


const ims = new Map();

/************************
INTERNAL MODULE: ./spiner
************************/

ims.set('./spiner', {hash: 2921182323, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BeyondSpinner = void 0;
var _react = require("react");
/*bundle*/const BeyondSpinner = (0, _react.forwardRef)((props, ref) => {
  const {
    color,
    className,
    primary,
    secondary,
    size
  } = props;
  let stroke;
  if (primary) stroke = "var(--primary)";else if (secondary) stroke = "var(--secondary)";else if (color) stroke = color;else stroke = "var(--primary)";
  const cls = className ? `${className} beyond-element-spinner` : "beyond-element-spinner";
  const style = {
    style: {}
  };
  if (size) {
    style.style.height = size;
    style.style.width = size;
  }
  ;
  return _react.default.createElement("div", {
    className: cls,
    ref: ref,
    ...style
  }, _react.default.createElement("svg", {
    viewBox: "0 0 100 100"
  }, _react.default.createElement("circle", {
    cx: "50",
    cy: "50",
    r: "20",
    style: {
      stroke
    }
  })));
});
exports.BeyondSpinner = BeyondSpinner;
}});

__pkg.exports.descriptor = [{"im":"./spiner","from":"BeyondSpinner","name":"BeyondSpinner"}];

export let BeyondSpinner;

// Module exports
__pkg.exports.process = function({require, prop, value}) {
    (require || prop === 'BeyondSpinner') && (BeyondSpinner = require ? require('./spiner').BeyondSpinner : value);

};
export const __beyond_pkg = __pkg;

export const hmr = new (function () {
    this.on = (event, listener) => void 0;
    this.off = (event, listener) => void 0;
});


__pkg.initialise(ims);
//# sourceMappingURL=spinner.browser.mjs.map
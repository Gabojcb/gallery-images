define(["exports", "module", "@beyond-js/kernel/bundle", "react", "@beyond-js/kernel/styles"], function (_exports, _amd_module, dependency_0, dependency_1, dependency_2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.hmr = _exports.__beyond_pkg = _exports.BeyondSpinner = void 0;
  const {
    Bundle: __Bundle
  } = dependency_0;
  const __pkg = new __Bundle({
    "module": {
      "vspecifier": "@bgroup/ui@0.0.34/spinner"
    },
    "type": "code",
    "name": "spinner"
  }, _amd_module.uri).package();
  ;
  __pkg.dependencies.update([['react', dependency_1], ['@beyond-js/kernel/styles', dependency_2]]);
  brequire('@beyond-js/kernel/styles').styles.register('@bgroup/ui@0.0.34/spinner');
  const ims = new Map();

  /************************
  INTERNAL MODULE: ./spiner
  ************************/

  ims.set('./spiner', {
    hash: 2921182323,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.BeyondSpinner = void 0;
      var _react = require("react");
      /*bundle*/
      const BeyondSpinner = (0, _react.forwardRef)((props, ref) => {
        const {
          color,
          className,
          primary,
          secondary,
          size
        } = props;
        let stroke;
        if (primary) stroke = "var(--primary)";else if (secondary) stroke = "var(--secondary)";else if (color) stroke = color;else stroke = "var(--primary)";
        const cls = className ? `${className} beyond-element-spinner` : "beyond-element-spinner";
        const style = {
          style: {}
        };
        if (size) {
          style.style.height = size;
          style.style.width = size;
        }
        ;
        return _react.default.createElement("div", {
          className: cls,
          ref: ref,
          ...style
        }, _react.default.createElement("svg", {
          viewBox: "0 0 100 100"
        }, _react.default.createElement("circle", {
          cx: "50",
          cy: "50",
          r: "20",
          style: {
            stroke
          }
        })));
      });
      exports.BeyondSpinner = BeyondSpinner;
    }
  });
  __pkg.exports.descriptor = [{
    "im": "./spiner",
    "from": "BeyondSpinner",
    "name": "BeyondSpinner"
  }];
  let BeyondSpinner;

  // Module exports
  _exports.BeyondSpinner = BeyondSpinner;
  __pkg.exports.process = function ({
    require,
    prop,
    value
  }) {
    (require || prop === 'BeyondSpinner') && (_exports.BeyondSpinner = BeyondSpinner = require ? require('./spiner').BeyondSpinner : value);
  };
  const __beyond_pkg = __pkg;
  _exports.__beyond_pkg = __beyond_pkg;
  const hmr = new function () {
    this.on = (event, listener) => void 0;
    this.off = (event, listener) => void 0;
  }();
  _exports.hmr = hmr;
  __pkg.initialise(ims);
});
//# sourceMappingURL=spinner.amd.js.map
import * as dependency_0 from '@beyond-js/kernel/bundle';
import * as dependency_1 from 'react';
import * as dependency_2 from '@beyond-js/kernel/routing';

const {Bundle: __Bundle} = dependency_0;
const __pkg = new __Bundle({"module":{"vspecifier":"@bgroup/ui@0.0.34/link"},"type":"code"}, import.meta.url).package();;

__pkg.dependencies.update([['react', dependency_1],['@beyond-js/kernel/routing', dependency_2]]);

const ims = new Map();

/***********************
INTERNAL MODULE: ./index
***********************/

ims.set('./index', {hash: 3282325095, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Elink = Elink;
exports.Link = Link;
var React = require("react");
var _routing = require("@beyond-js/kernel/routing");
/*bundle*/function Link(props) {
  const onClick = event => {
    event.preventDefault();
    event.stopPropagation();
    if (props.onClick && typeof props.onClick === "function") {
      props.onClick(event);
    }
    _routing.routing.pushState(props.href);
  };
  const properties = {
    ...props
  };
  delete properties.href;
  delete properties.onClick;
  return React.createElement("a", {
    onClick: onClick,
    ...properties
  }, props.children);
}
/*bundle*/function Elink(props) {
  const {
    href
  } = props;
  delete props.href;
  return React.createElement("a", {
    href: href,
    target: "_blank",
    ...props,
    "data-algo": "algo"
  }, props.children);
}
}});

__pkg.exports.descriptor = [{"im":"./index","from":"Link","name":"Link"},{"im":"./index","from":"Elink","name":"Elink"}];

export let Link, Elink;

// Module exports
__pkg.exports.process = function({require, prop, value}) {
    (require || prop === 'Link') && (Link = require ? require('./index').Link : value);
    (require || prop === 'Elink') && (Elink = require ? require('./index').Elink : value);

};
export const __beyond_pkg = __pkg;

export const hmr = new (function () {
    this.on = (event, listener) => void 0;
    this.off = (event, listener) => void 0;
});


__pkg.initialise(ims);
//# sourceMappingURL=link.browser.mjs.map
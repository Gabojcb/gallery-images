define(["exports", "module", "@beyond-js/kernel/bundle", "react", "@bgroup/ui/form", "@bgroup/ui/icons", "react-dom"], function (_exports, _amd_module, dependency_0, dependency_1, dependency_2, dependency_3, dependency_4) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.hmr = _exports.__beyond_pkg = _exports.BeyondModal = _exports.BeyondConfirmModal = _exports.BeyondAlertModal = void 0;
  const {
    Bundle: __Bundle
  } = dependency_0;
  const __pkg = new __Bundle({
    "module": {
      "vspecifier": "@bgroup/ui@0.0.34/modal"
    },
    "type": "code",
    "name": "modal"
  }, _amd_module.uri).package();
  ;
  __pkg.dependencies.update([['react', dependency_1], ['@bgroup/ui/form', dependency_2], ['@bgroup/ui/icons', dependency_3], ['react-dom', dependency_4]]);
  const ims = new Map();

  /***********************
  INTERNAL MODULE: ./alert
  ***********************/

  ims.set('./alert', {
    hash: 2870887663,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.BeyondAlertModal = BeyondAlertModal;
      var _react = require("react");
      var _modal = require("./modal");
      var _form = require("@bgroup/ui/form");
      /*bundle*/
      function BeyondAlertModal(props) {
        const [state, setState] = _react.default.useState({
          fetching: false
        });
        const close = event => {
          setState({
            fetching: true
          });
          if (props.onConfirm) props.onConfirm();
          setState({
            fetching: false
          });
          if (props.onClose) props.onClose();
        };
        const {
          text,
          title,
          btn,
          centered
        } = props;
        let btnLabel = typeof btn === 'string' ? btn : 'Confirmar';
        let cls = `beyond-alert-dialog${centered ? ' beyond-alert-dialog-centered' : ''}`;
        if (props.className) cls += ` ${props.className}`;
        let clsCancel = 'btn btn-default btn-cancel';
        if (btn && typeof btn === 'object') {
          btnLabel = btn.label ?? btn;
          clsCancel = btn.className ?? clsCancel;
        }
        ;
        const disabled = {};
        if (state.fetching) disabled.disabled = true;
        return _react.default.createElement(_modal.BeyondModal, {
          show: true,
          className: cls
        }, _react.default.createElement("div", {
          className: "alert-dialog-content"
        }, title && _react.default.createElement("h3", {
          dangerouslySetInnerHTML: {
            __html: title
          }
        }), text && _react.default.createElement("div", {
          dangerouslySetInnerHTML: {
            __html: text
          }
        }), props.children ? props.children : null), _react.default.createElement("div", {
          className: "actions"
        }, _react.default.createElement(_form.BeyondButton, {
          className: clsCancel,
          label: btnLabel,
          onClick: close,
          ...disabled
        })));
      }
    }
  });

  /**************************
  INTERNAL MODULE: ./children
  **************************/

  ims.set('./children', {
    hash: 1553763792,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.useBeyondModalContext = exports.Children = exports.BeyondModalContext = void 0;
      var React = require("react");
      var _icons = require("@bgroup/ui/icons");
      const BeyondModalContext = (0, React.createContext)({});
      exports.BeyondModalContext = BeyondModalContext;
      const useBeyondModalContext = () => (0, React.useContext)(BeyondModalContext);
      exports.useBeyondModalContext = useBeyondModalContext;
      const Children = ({
        children,
        close,
        dismiss
      }) => {
        const output = [];
        if (dismiss !== false) {
          output.push(React.createElement(_icons.BeyondIconButton, {
            className: "close-icon",
            onClick: close,
            "data-dismiss": "modal",
            "aria-label": "Close",
            key: "dismiss-button",
            icon: "close"
          }));
        }
        const childrenWithProps = React.Children.map(children, child => {
          // checking isValidElement is the safe way and avoids a typescript error too
          if ((0, React.isValidElement)(child)) {
            const specs = {};
            //TODO: check a official way to check the children type
            return (0, React.cloneElement)(child, specs);
          }
          return child;
        });
        output.push(childrenWithProps);
        return React.createElement(BeyondModalContext.Provider, {
          value: {
            close,
            dismiss
          }
        }, output);
      };
      exports.Children = Children;
    }
  });

  /*************************
  INTERNAL MODULE: ./confirm
  *************************/

  ims.set('./confirm', {
    hash: 2995532002,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.BeyondConfirmModal = void 0;
      var React = require("react");
      var _form = require("@bgroup/ui/form");
      var _modal = require("./modal");
      /*bundle*/
      const BeyondConfirmModal = properties => {
        const [state, setState] = React.useState({
          fetching: false
        });
        const process = async event => {
          event.stopPropagation();
          setState({
            fetching: true
          });
          const {
            onConfirm,
            onClose
          } = properties;
          if (!onConfirm) {
            console.warn('there is no confirm funciton defined');
            setState({
              fetching: false
            });
            return;
          }
          await onConfirm();
          setState({
            fetching: false
          });
        };
        const {
          text,
          title,
          btn,
          onCancel,
          centered,
          onConfirm,
          btnConfirm,
          btnCancel
        } = properties;
        let cls = `beyond-confirm-dialog${centered ? ' beyond-confirm-dialog-centered' : ''}`;
        if (properties.className) cls += ` ${properties.className}`;
        const props = Object.assign({}, properties);
        delete props.text;
        delete props.title;
        delete props.className;
        delete props.centering;
        delete props.btnCancel;
        delete props.btnConfirm;
        delete props.onCancel;
        let cancelLabel = 'Cancelar';
        let confirmLabel = 'Confirmar';
        let clsCancel = 'btn btn-default btn-cancel';
        let clsConfirm = 'btn btn-primary btn-confirm';
        if (btnConfirm && typeof btnConfirm === 'object') {
          confirmLabel = btnConfirm.label ? btnConfirm.label : btn;
          clsConfirm = btnConfirm.className ? btnConfirm.className : clsConfirm;
        }
        if (btnCancel && typeof btnCancel === 'object') {
          confirmLabel = btnCancel.label ? btnCancel.label : btn;
          clsCancel = btnCancel.className ? btnCancel.className : clsCancel;
        }
        const disabled = {};
        if (state.fetching) disabled.disabled = true;
        return React.createElement(_modal.BeyondModal, {
          show: true,
          className: cls,
          onClose: onCancel
        }, React.createElement("div", {
          className: "confirm-dialog-content"
        }, title && React.createElement("h3", null, title), text && React.createElement("div", null, text), properties.children), React.createElement("div", {
          className: "actions"
        }, React.createElement(_form.BeyondButton, {
          className: clsCancel,
          label: cancelLabel,
          ...disabled,
          onClick: onCancel
        }), React.createElement(_form.BeyondButton, {
          className: clsConfirm,
          label: confirmLabel,
          ...disabled,
          onClick: process
        })));
      };
      exports.BeyondConfirmModal = BeyondConfirmModal;
    }
  });

  /***********************
  INTERNAL MODULE: ./modal
  ***********************/

  ims.set('./modal', {
    hash: 3324356653,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.BeyondModal = BeyondModal;
      var React = require("react");
      var _reactDom = require("react-dom");
      var _children = require("./children");
      /*bundle*/
      function BeyondModal(props) {
        const [state, setState] = (0, React.useState)({
          show: props?.show,
          closeClicked: false,
          container: null
        });
        const modal = (0, React.useRef)(null);
        const close = async event => {
          if (event) event.stopPropagation();
          const {
            onClose
          } = props;
          const body = document.querySelector('body');
          modal.current.classList.add('modal-hidden');
          window.setTimeout(async () => {
            //  if (typeof onClose === "function") return;
            setState({
              ...state,
              show: false,
              closeClicked: true
            });
            body.setAttribute('style', '');
            body.classList.remove('body-custom-modal-opened');
            onClose(event);
          }, 300);
        };
        const onClickBackdrop = event => {
          event.stopPropagation();
          close(event);
        };
        (0, React.useEffect)(() => {
          const container = document.createElement('div');
          setState({
            ...state,
            container
          });
          const body = document.querySelector('body');
          body.appendChild(container);
          return () => {
            body.removeChild(container);
          };
        }, []);
        const {
          container
        } = state;
        if (!container) return null;
        const show = state.show;
        let cls = 'beyond-element-modal ';
        cls += props.className ? props.className : '';
        if (show) cls += ' show-modal';
        const output = [];
        if (show) {
          output.push(React.createElement("div", {
            key: "modal-content-wrapper",
            className: "modal-wrapper"
          }, React.createElement("div", {
            className: "modal-content",
            onClick: event => {
              event.stopPropagation();
            }
          }, React.createElement(_children.Children, {
            ...props,
            close: close,
            key: "children-content"
          }))));
        }
        return (0, _reactDom.createPortal)(React.createElement("div", {
          ref: modal,
          onClick: onClickBackdrop,
          className: cls
        }, output), container);
      }
    }
  });
  __pkg.exports.descriptor = [{
    "im": "./alert",
    "from": "BeyondAlertModal",
    "name": "BeyondAlertModal"
  }, {
    "im": "./confirm",
    "from": "BeyondConfirmModal",
    "name": "BeyondConfirmModal"
  }, {
    "im": "./modal",
    "from": "BeyondModal",
    "name": "BeyondModal"
  }];
  let BeyondAlertModal, BeyondConfirmModal, BeyondModal;

  // Module exports
  _exports.BeyondModal = BeyondModal;
  _exports.BeyondConfirmModal = BeyondConfirmModal;
  _exports.BeyondAlertModal = BeyondAlertModal;
  __pkg.exports.process = function ({
    require,
    prop,
    value
  }) {
    (require || prop === 'BeyondAlertModal') && (_exports.BeyondAlertModal = BeyondAlertModal = require ? require('./alert').BeyondAlertModal : value);
    (require || prop === 'BeyondConfirmModal') && (_exports.BeyondConfirmModal = BeyondConfirmModal = require ? require('./confirm').BeyondConfirmModal : value);
    (require || prop === 'BeyondModal') && (_exports.BeyondModal = BeyondModal = require ? require('./modal').BeyondModal : value);
  };
  const __beyond_pkg = __pkg;
  _exports.__beyond_pkg = __beyond_pkg;
  const hmr = new function () {
    this.on = (event, listener) => void 0;
    this.off = (event, listener) => void 0;
  }();
  _exports.hmr = hmr;
  __pkg.initialise(ims);
});
//# sourceMappingURL=modal.amd.js.map
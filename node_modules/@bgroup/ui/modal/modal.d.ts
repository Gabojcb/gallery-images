/************
Processor: ts
************/

import * as dependency_0 from 'react';

// FILE: alert.d.tsx
declare namespace ns_alert {
    /// <reference types="react" />
    function BeyondAlertModal(props: any): JSX.Element;
}

// FILE: children.d.tsx
declare namespace ns_children {
    import Context = dependency_0.Context;
    import ReactNode = dependency_0.ReactNode;
    import SyntheticEvent = dependency_0.SyntheticEvent;
    const BeyondModalContext: Context<any>;
    const useBeyondModalContext: () => any;
    type props = {
        children: ReactNode;
        close?: (e: SyntheticEvent<HTMLElement, Event>) => void;
        dismiss?: boolean;
    };
    const Children: ({ children, close, dismiss }: props) => JSX.Element;
}

// FILE: confirm.d.tsx
declare namespace ns_confirm {
    /// <reference types="react" />
    const BeyondConfirmModal: (properties: any) => JSX.Element;
}

// FILE: modal.d.tsx
declare namespace ns_modal {
    import SyntheticEvent = dependency_0.SyntheticEvent;
    import ReactNode = dependency_0.ReactNode;
    import ReactPortal = dependency_0.ReactPortal;
    type props = {
        children: ReactNode;
        className?: string;
        onClose?: (e: SyntheticEvent<HTMLElement, Event>) => void;
        show?: boolean;
    };
    function BeyondModal(props: props): ReactPortal;
}

export import BeyondAlertModal = ns_alert.BeyondAlertModal;
export import BeyondConfirmModal = ns_confirm.BeyondConfirmModal;
export import BeyondModal = ns_modal.BeyondModal;


export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };
import * as dependency_0 from '@beyond-js/kernel/bundle';
import * as dependency_1 from '@beyond-js/kernel/styles';
import * as dependency_2 from 'react';
import * as dependency_3 from '@bgroup/ui/form';
import * as dependency_4 from '@bgroup/ui/icons';

const {Bundle: __Bundle} = dependency_0;
const __pkg = new __Bundle({"module":{"vspecifier":"@bgroup/ui@0.0.34/header"},"type":"code"}, import.meta.url).package();;

__pkg.dependencies.update([['@beyond-js/kernel/styles', dependency_1],['react', dependency_2],['@bgroup/ui/form', dependency_3],['@bgroup/ui/icons', dependency_4]]);

brequire('@beyond-js/kernel/styles').styles.register('@bgroup/ui@0.0.34/header')


const ims = new Map();

/***********************
INTERNAL MODULE: ./index
***********************/

ims.set('./index', {hash: 3201702456, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Header = Header;
var React = require("react");
var _form = require("@bgroup/ui/form");
var _icons = require("@bgroup/ui/icons");
;
/*bundle*/function Header({
  componentName
}) {
  const theme = globalThis?.matchMedia("(prefers-color-scheme: dark)").matches;
  const themeStorage = localStorage.getItem('theme');
  const defaultTheme = theme ? "dark" : "light";
  const userTheme = themeStorage ? themeStorage === "dark" : defaultTheme === "dark";
  const [isDark, setIsDark] = React.useState(userTheme);
  function handleChange({
    target
  }) {
    const container = document.querySelector("html");
    const theme = isDark ? "light" : "dark";
    container.setAttribute("data-beyond-mode", theme);
    localStorage.setItem("theme", theme);
    setIsDark(target.checked);
  }
  ;
  React.useEffect(() => {
    if (!themeStorage) return;
    const container = document.querySelector("html");
    container.setAttribute("data-beyond-mode", themeStorage);
  }, []);
  const icon = isDark ? "moon" : "sun";
  return React.createElement("header", {
    className: "header"
  }, React.createElement("h2", {
    className: "title"
  }, componentName), React.createElement("div", {
    className: "content-theme"
  }, React.createElement(_icons.BeyondIcon, {
    icon: icon
  }), React.createElement(_form.BeyondSwitch, {
    className: "checkbox",
    checked: isDark,
    onChange: handleChange
  })));
}
}});

__pkg.exports.descriptor = [{"im":"./index","from":"Header","name":"Header"}];

export let Header;

// Module exports
__pkg.exports.process = function({require, prop, value}) {
    (require || prop === 'Header') && (Header = require ? require('./index').Header : value);

};
export const __beyond_pkg = __pkg;

export const hmr = new (function () {
    this.on = (event, listener) => void 0;
    this.off = (event, listener) => void 0;
});


__pkg.initialise(ims);
//# sourceMappingURL=header.browser.mjs.map
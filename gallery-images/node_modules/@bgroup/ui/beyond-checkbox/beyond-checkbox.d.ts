/************
Processor: ts
************/

import * as dependency_0 from '@beyond-js/react-widgets/page';

// FILE: controller.d.ts
declare namespace ns_controller {
    import PageReactWidgetController = dependency_0.PageReactWidgetController;
    import View = ns_views_index.View;
    class Controller extends PageReactWidgetController {
        get Widget(): typeof View;
    }
}

// FILE: views\implementation.d.ts
declare namespace ns_views_implementation {
    const implementation = "\nexport function CheckboxImplementation() {\n\tconst [selectedValue, setSelectedValue] = React.useState(false);\n\n\tfunction handleChange(event) {\n\t\tconst { checked } = event.target;\n\t\tsetSelectedValue(checked);\n\t};\n\n\treturn (\n\t\t<form className=\"results-form\">\n\t\t\t<BeyondCheckbox\n\t\t\t\tonChange={handleChange}\n\t\t\t\tchecked={selectedValue}\n\t\t\t\tname='check'\n\t\t\t/>\n\t\t</form>\n\t);\n}";
}

// FILE: views\index.d.tsx
declare namespace ns_views_index {
    /// <reference types="react" />
    function View(): JSX.Element;
}

// FILE: views\results.d.tsx
declare namespace ns_views_results {
    /// <reference types="react" />
    function Results(): JSX.Element;
}

export import Controller = ns_controller.Controller;
export import View = ns_views_index.View;


export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };
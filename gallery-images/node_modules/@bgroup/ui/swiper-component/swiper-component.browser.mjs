import * as dependency_0 from '@beyond-js/kernel/bundle';
import * as dependency_1 from 'react';
import * as dependency_2 from 'swiper';
import * as dependency_3 from '@bgroup/ui/reactive-model';
import * as dependency_4 from '@bgroup/ui/icons';
import * as dependency_5 from '@beyond-js/kernel/styles';

const {Bundle: __Bundle} = dependency_0;
const __pkg = new __Bundle({"module":{"vspecifier":"@bgroup/ui@0.0.34/swiper-component"},"type":"code","name":"swiper-component"}, import.meta.url).package();;

__pkg.dependencies.update([['react', dependency_1],['swiper', dependency_2],['@bgroup/ui/reactive-model', dependency_3],['@bgroup/ui/icons', dependency_4],['@beyond-js/kernel/styles', dependency_5]]);

brequire('@beyond-js/kernel/styles').styles.register('@bgroup/ui@0.0.34/swiper-component')


const ims = new Map();

/*************************
INTERNAL MODULE: ./context
*************************/

ims.set('./context', {hash: 856902038, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useBeyondSwiperContext = exports.BeyondSwiperContext = void 0;
var React = require("react");
const /*bundle*/BeyondSwiperContext = React.createContext({});
exports.BeyondSwiperContext = BeyondSwiperContext;
const /*bundle*/useBeyondSwiperContext = () => React.useContext(BeyondSwiperContext);
exports.useBeyondSwiperContext = useBeyondSwiperContext;
}});

/****************************
INTERNAL MODULE: ./controller
****************************/

ims.set('./controller', {hash: 3738763848, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Controller = void 0;
var Swiper = require("swiper");
var _reactiveModel = require("@bgroup/ui/reactive-model");
const SwiperCasted = Swiper.Swiper;
class Controller extends _reactiveModel.ReactiveModel {
  #swiper;
  get swiper() {
    return this.#swiper;
  }
  #onEnd;
  #props;
  setSwiper = (element, props, ref) => {
    this.#props = props;
    const specs = Object.assign({
      slidesPerView: props.slidesPerView ?? 1,
      modules: [Swiper.Navigation, Swiper.Pagination]
    }, props);
    if (!Swiper) {
      console.warn('Swiper keeps without been loaded');
      return;
    }
    if (props.pagination || props.footer) {
      specs.pagination = {
        el: ref.pagination.current,
        clickable: true,
        type: props.typePagination ?? "bullets",
        dynamicBullets: props.dynamicBullets ?? false
      };
    }
    if (props.navigation) {
      specs.navigation = {
        nextEl: ref.next.current,
        prevEl: ref.prev.current
      };
    }
    this.#swiper = new SwiperCasted(element, specs);
    if (props.activeSlide) this.#swiper.slideTo(parseInt(props.activeSlide));
    const nextSlide = () => {
      if (this.#swiper) this.#swiper.slideNext();
    };
    const prevSlide = () => {
      if (this.#swiper) this.#swiper.slidePrev();
    };
    const slideTo = index => {
      if (this.#swiper) this.#swiper.slideTo(parseInt(index));
    };
    if (props.nextSlide && typeof props.nextSlide === "function") props.nextSlide(nextSlide);
    if (props.prevSlide && typeof props.prevSlide === "function") props.prevSlide(prevSlide);
    if (props.slideTo && typeof props.slideTo === "function") props.slideTo(slideTo);
    this.#swiper.on("slideChange", () => {
      if (this.#swiper?.isEnd) {
        this.#onEnd = true;
        this.triggerEvent();
      } else {
        this.#onEnd = false;
        this.triggerEvent();
      }
    });
  };
  nextSlide = () => {
    if (!this.#swiper?.isEnd) {
      this.#swiper?.slideNext(500, false);
      return;
    }
    if (!this.#onEnd) return;
    if (this.#props.functionNext) this.#props.functionNext();else this.#swiper?.slideNext(500, false);
  };
  next = () => {
    if (!this.#swiper?.isEnd) {
      this.#swiper?.slideNext(500, false);
      return;
    }
    if (!this.#onEnd) return;
    this.#props.functionNext();
  };
}
exports.Controller = Controller;
}});

/***********************
INTERNAL MODULE: ./slide
***********************/

ims.set('./slide', {hash: 2634860187, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Slide = Slide;
var React = require("react");
function Slide(props) {
  return React.createElement("div", {
    className: "swiper-slide"
  }, props.children);
}
}});

/*******************************
INTERNAL MODULE: ./swiper-slider
*******************************/

ims.set('./swiper-slider', {hash: 3725481151, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BeyondSwiperSlider = BeyondSwiperSlider;
var React = require("react");
var _slide = require("./slide");
var _controller = require("./controller");
var _icons = require("@bgroup/ui/icons");
/*bundle*/function BeyondSwiperSlider(props) {
  const refs = {
    next: React.useRef(),
    container: React.useRef(),
    pagination: React.useRef(),
    prev: React.useRef()
  };
  const {
    slideTo
  } = props;
  const {
    container,
    prev
  } = refs;
  const slides = props.children.map((slide, index) => React.createElement(_slide.Slide, {
    key: index
  }, slide));
  const footer = props.footer === true;
  const [state, setState] = React.useState({});
  React.useEffect(() => {
    const controller = new _controller.Controller();
    const onChange = () => setState({
      ...state,
      ready: true,
      swiper: controller.swiper,
      controller,
      lastIndex: controller.lastIndex
    });
    controller.bind("change", onChange);
    if (!controller.destroyed) controller.setSwiper(container.current, props, refs);
    onChange();
    return () => controller.unbind("change", onChange);
  }, []);
  React.useEffect(() => {
    if (!state.swiper || !slideTo) return;
    state.swiper.slideTo(slideTo);
  }, [slideTo]);
  const {
    controller
  } = state;
  const cls = props.className ? `${props.className} beyond-element-swiper-slider` : "beyond-element-swiper-slider";
  const next = () => controller?.next();
  return React.createElement("div", {
    className: cls
  }, React.createElement("div", {
    ref: container,
    className: "swiper-container"
  }, React.createElement("div", {
    className: "swiper-wrapper"
  }, slides), props.pagination && React.createElement("div", {
    ref: refs?.pagination,
    className: "swiper-pagination"
  }), footer && React.createElement(React.Fragment, null, !controller?.swiper.isEnd && React.createElement("button", {
    className: "swiper-button-prev",
    onClick: props.functionNext
  }, "SKIP"), React.createElement("div", {
    ref: refs.pagination,
    className: "swiper-pagination"
  }), React.createElement("button", {
    className: "swiper-button-next ",
    onClick: controller?.next
  }, "Next")), props.navigation && React.createElement(React.Fragment, null, React.createElement("div", {
    ref: prev,
    className: "swiper-button-prev"
  }, React.createElement(_icons.BeyondIcon, {
    icon: "left"
  })), React.createElement("div", {
    onClick: controller?.nextSlide,
    className: "swiper-button-next"
  }, React.createElement(_icons.BeyondIcon, {
    icon: "right"
  })))));
}
}});

__pkg.exports.descriptor = [{"im":"./context","from":"BeyondSwiperContext","name":"BeyondSwiperContext"},{"im":"./context","from":"useBeyondSwiperContext","name":"useBeyondSwiperContext"},{"im":"./swiper-slider","from":"BeyondSwiperSlider","name":"BeyondSwiperSlider"}];

export let BeyondSwiperContext, useBeyondSwiperContext, BeyondSwiperSlider;

// Module exports
__pkg.exports.process = function({require, prop, value}) {
    (require || prop === 'BeyondSwiperContext') && (BeyondSwiperContext = require ? require('./context').BeyondSwiperContext : value);
    (require || prop === 'useBeyondSwiperContext') && (useBeyondSwiperContext = require ? require('./context').useBeyondSwiperContext : value);
    (require || prop === 'BeyondSwiperSlider') && (BeyondSwiperSlider = require ? require('./swiper-slider').BeyondSwiperSlider : value);

};
export const __beyond_pkg = __pkg;

export const hmr = new (function () {
    this.on = (event, listener) => void 0;
    this.off = (event, listener) => void 0;
});


__pkg.initialise(ims);
//# sourceMappingURL=swiper-component.browser.mjs.map
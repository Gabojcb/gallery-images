/************
Processor: ts
************/

import * as dependency_0 from 'react';

// FILE: beyond-tabs.d.tsx
declare namespace ns_beyondtabs {
    /// <reference types="react" />
    function BeyondTabs(props: any): JSX.Element;
}

// FILE: context.d.tsx
declare namespace ns_context {
    import PropsWithChildren = dependency_0.PropsWithChildren;
    interface props {
        orientation?: string;
        selected?: string;
        className?: string;
    }
    function TabsContextProvider(props: PropsWithChildren<props>): JSX.Element;
    const useTabsContext: () => any;
}

// FILE: tab.d.tsx
declare namespace ns_tab {
    import React = dependency_0;
    import PropsWithChildren = dependency_0.PropsWithChildren;
    type props = {
        index?: string;
        isActive?: boolean;
        selected?: string;
        className?: string;
        onTab?: any;
        nolink?: any;
    };
    const BeyondTab: (props: React.PropsWithChildren<props>) => JSX.Element;
}

// FILE: tabs-content.d.tsx
declare namespace ns_tabscontent {
    import ReactNode = dependency_0.ReactNode;
    function TabsContent(props: {
        children: ReactNode[];
    }): JSX.Element;
}

// FILE: tabs.d.tsx
declare namespace ns_tabs {
    import PropsWithChildren = dependency_0.PropsWithChildren;
    type props = {
        onClick?: any;
        children?: any;
        nolink?: any;
        selected?: any;
    };
    function Tabs(props: PropsWithChildren<props>): JSX.Element;
}

export import BeyondTabs = ns_beyondtabs.BeyondTabs;
export import TabsContextProvider = ns_context.TabsContextProvider;
export import useTabsContext = ns_context.useTabsContext;
export import BeyondTab = ns_tab.BeyondTab;
export import TabsContent = ns_tabscontent.TabsContent;
export import Tabs = ns_tabs.Tabs;


export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };